name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run linting
      run: pnpm lint
    
    - name: Run type checking
      run: pnpm build --dry-run || npx tsc --noEmit
    
    - name: Run unit tests
      run: pnpm test --run
    
    - name: Run integration tests
      run: pnpm test:integration
      env:
        NODE_ENV: test
        SUPABASE_URL: ${{ secrets.SUPABASE_TEST_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_TEST_ANON_KEY }}
    
    - name: Build application
      run: pnpm build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_APP_URL: https://shotcaller-fantasy-game.vercel.app
    
    - name: Run E2E tests
      run: pnpm test:e2e
      env:
        NODE_ENV: test
        PLAYWRIGHT_BROWSERS_PATH: 0
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          test-results/
          playwright-report/
        retention-days: 7

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run security audit
      run: pnpm audit --audit-level moderate
    
    - name: Check for vulnerabilities
      run: |
        npx audit-ci --config audit-ci.json || true
    
    - name: Scan for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  build-and-deploy:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build application
      run: pnpm build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_APP_URL: https://shotcaller-fantasy-game.vercel.app
        NEXT_PUBLIC_ENVIRONMENT: production
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./
    
    - name: Run post-deployment tests
      run: |
        sleep 30 # Wait for deployment to be ready
        curl -f https://shotcaller-fantasy-game.vercel.app/api/health/production || exit 1
    
    - name: Notify deployment success
      if: success()
      run: |
        echo "‚úÖ Deployment successful!"
        echo "üöÄ Application is live at: https://shotcaller-fantasy-game.vercel.app"
    
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        exit 1